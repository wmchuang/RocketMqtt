// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RocketMqtt.Infrastructure.EFCore;

#nullable disable

namespace RocketMqtt.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("RocketMqtt.Domain.Domain.ConnInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("TEXT")
                        .HasComment("主键");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("客户端Id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("地址");

                    b.Property<uint>("KeepAlive")
                        .HasColumnType("INTEGER")
                        .HasComment("心跳（秒）");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("客户端用户名");

                    b.HasKey("Id");

                    b.ToTable("ConnInfo", (string)null);
                });

            modelBuilder.Entity("RocketMqtt.Domain.Domain.Subscribed", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("TEXT")
                        .HasComment("主键");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("客户端Id");

                    b.Property<int>("Qos")
                        .HasColumnType("INTEGER")
                        .HasComment("Qos");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主题名称");

                    b.HasKey("Id");

                    b.ToTable("Subscribed", (string)null);
                });

            modelBuilder.Entity("RocketMqtt.Domain.Domain.Topic", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("TEXT")
                        .HasComment("主键");

                    b.Property<string>("Node")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("节点");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主题名称");

                    b.HasKey("Id");

                    b.ToTable("Topic", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
